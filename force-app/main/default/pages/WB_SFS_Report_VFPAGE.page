<apex:page controller="WB_SFS_Report_Controllerr" showHeader="false" sidebar="false" applyHtmlTag="true" applyBodyTag="true">
    <html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" charset="utf8" >
        <head>
            <meta http-equiv="x-ua-compatible" content="ie=edge"></meta>
            <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no"></meta>
    
            <apex:includeScript value="{!URLFOR($Resource.WB_Resource_Library, 'js/jquery.min.js')}" />
            <apex:includeScript value="{!URLFOR($Resource.CRM_HandsonTable_Pro_Library, 'handsontable.full.js')}"/>
            <apex:stylesheet value="{!URLFOR($Resource.CRM_HandsonTable_Pro_Library, 'handsontable.full.css')}"/>
            <apex:stylesheet value="{!URLFOR($Resource.CRM_HandsonTable_Pro_Library, 'handsontable.css')}"/>
            <apex:stylesheet value="{!URLFOR($Resource.CRM_HandsonTable_Pro_Library, 'handsontable.min.css')}"/>
            
            <apex:stylesheet value="{!URLFOR($Resource.SLDS0120, 'assets/styles/salesforce-lightning-design-system-vf.css')}" />
            <apex:stylesheet value="{!URLFOR($Resource.CRM_DealProductFileUpload, 'CRM_DealProductFileUpload/css/main.css')}" />
            
            <apex:includeScript value="{!URLFOR($Resource.CRM_HandsonTable_Pro_Library, 'languages/all.js')}"/>
            <apex:includeScript value="{!URLFOR($Resource.CRM_HandsonTable_Pro_Library, 'numbro/languages.js')}"/>
            <apex:includeScript value="{!URLFOR($Resource.CRM_HandsonTable_Pro_Library, 'numbro/numbro.js')}"/>
            <apex:includeScript value="{!URLFOR($Resource.CRM_HandsonTable_Pro_Library, 'moment/moment.js')}"/>
            
            <apex:includeScript value="{!URLFOR($Resource.WB_Resource_Library, 'js/angular.min.js')}" />
            <apex:includeScript value="{!URLFOR($Resource.WB_Resource_Library, 'js/crm-components.js')}" />
            <apex:includeScript value="{!URLFOR($Resource.WB_Resource_Library, 'js/svgxuse.js')}" /> 
            
            <!--- Date Lib------------->
            <apex:includeScript value="{!URLFOR($Resource.WB_Resource_Library, 'datepicker/js/bootstrap-datepicker.js')}" />
            <apex:includeScript value="{!URLFOR($Resource.WB_Resource_Library)}/datepicker/locales/bootstrap-datepicker.{!UserLocaleLanguage}.min.js" />
            <apex:stylesheet value="{!URLFOR($Resource.WB_Resource_Library, 'datepicker/css/bootstrap-datepicker3.standalone.css')}" />
            <apex:includeScript value="{!URLFOR($Resource.CRM_Dynamic_Locale)}/js/locale/angular-locale_{!userLocaleLowerCase}.js"/>
            
            <script src="/soap/ajax/35.0/connection.js" type="text/javascript"></script>
            <script src="/soap/ajax/35.0/apex.js" type="text/javascript"></script>
            
            <style>
                .wordWrapClass {
                    text-overflow: ellipsis;
                    white-space: nowrap !important;
                    max-width: 20px;    
                }
                .slds .slds-notify--toast {
                    margin: 8px 8px 5px;   
                }
                .handsontable thead th {
                    background-color: #4F6A92 !important;
                    color: white !important;
                }
                .slds .slds-page-header{
                    padding: 11px !important;
                }
                .picklistClass .slds-button,.buttonGroupheight{
                    height: 31px;
                }
                .picklistClass span:first-of-type{
                    color:#636875 !important;
                    line-height: initial;
                }
                .picklistClass span:nth-child(2),.picklistClass span:nth-child(3){
                    line-height: initial;
                }
                html body.sfdcBody{
                    padding:0px;
                }
                .slds-lookup{
                    width: 240px;
                }
                .slds-pill__container, #lookup{
                    min-height:31px !important;
                    height:31px;
                }
                .slds .slds-pill{
                    height: 27px !important;
                    line-height: 1.25 !important;  
                    padding-left: 14px;
                }
                .slds .slds-lookup__item > a, .slds .slds-dropdown__item > a{
                    padding: 6px 0px 6px 12px !important;
                }
                #spinnerText{
                    font-size: 18px;
                }
                /*ER-002186*/
                .handsontable thead th {
                    background-color: #4F6A92 !important;
                    color: white !important;
                }
                .handsontableInputHolder .handsontableInput{
                    background-color: white !important;
                }
            </style>
    
            <script type="text/javascript"> 
    
                sforce.connection.sessionId = '{!$Api.Session_ID}';
    
                    /* Pass a few dynamic parameters */
                    angular.module("appConfig", [])
                    .service("appConfig", function() {
                        return {
                            userLocal: '{!UserLocale}',
                            userDateFormat: '{!UserDateFormat}',
                            recordLimit: {!RecordLimit},
                            chunkSize: {!BatchSizeCount},
                            handsontableProLicenseKey: '{!HandsonTable_Pro_Licencekey}',//ER-002186 - handsontable PRO version
                            resourceSlds: '{!URLFOR($Resource.SLDS0120)}'.replace('?isdtp=p1', '')
                        };
                    });
    
                    angular.module("UploadCAPRecords", ['appConfig', 'crm-components','ngLocale'])
                        .controller("UploadCAPController", ['$scope', '$timeout', 'appConfig','$locale', function($scope, $timeout, appConfig, $locale) {   
        
                            var handsonLocale = new Set(['bg','cs-CZ','da-DK','de-AT','de-CH','de-DE','de-LI','el','en-AU','en-GB','en-IE','en-NZ','en-US','en-ZA',
                                                         'es-AR','es-CL','es-CO','es-CR','es-ES','es-MX','es-NI','es-PE','es-PR','es-SV','et-EE','fa-IR','fi-FI',
                                                         'fil-PH','fr-CA','fr-CH','fr-FR','he-IL','hu-HU','id','it-CH','it-IT','ja-JP','ko-KR','lv-LV','nb','nb-NO',
                                                         'nl-BE','nl-NL','nn','pl-PL','pt-BR','pt-PT','ro-RO','ru-RU','ru-UA','sk-SK','sl','sr-Cyrl-RS','sv-SE','th-TH',
                                                         'tr-TR','uk-UA','zh-CN','zh-MO','zh-SG','zh-TW']);
        
                            $scope.showSpinner = false;
                            $scope.appConfig = appConfig;
                            
                            //Invalid Value Checker Set
                            var invalidValueSet = new Set();
                            invalidValueSet.add("");
                            invalidValueSet.add(null);
                            invalidValueSet.add(undefined);
        
                            $scope.UserLocal = $scope.appConfig.userLocal; 
                            $scope.UserDateFormat = $scope.appConfig.userDateFormat;
                            $scope.UserDateFormatInUpperCase = $scope.UserDateFormat.toUpperCase();
                            
                            <!-------- Date Conversion Logic------->
                            function convertDate(dateVal) {
                                $scope.DateObj = new Date(dateVal);
                                $scope.totalMinute = ($scope.DateObj.getMinutes() + $scope.DateObj.getTimezoneOffset());
                                $scope.DateObj.setMinutes($scope.totalMinute);
                                $scope.DateObj = moment($scope.DateObj.toLocaleDateString($scope.UserLocal),$scope.UserDateFormatInUpperCase);
                                return $scope.DateObj.format($scope.UserDateFormatInUpperCase);
                            };   
                            <!-------- Date Conversion Logic------->
                            
                            $scope.today = new Date();   
                            $scope.datepickerOptions = {language : '{!userLocale}',format: '{!UserDateFormat}', clearBtn: true, todayHighlight: true};
                            $scope.availDateFromVal;
                            $scope.availDateToVal;
                            
                            $scope.filter = {
                                accountId: '',
                                countryId : '',
                                title: '',
                                fromDate: null,
                                toDate: null,
                            };
                            var initalHeight = ($(window).height() - $('#headerDiv').height() - 28);
                            $scope.height = initalHeight;
                            
                            $scope.sfsReportData = [];
                            var container = document.getElementById('tableDiv');
                            var hot = new Handsontable(container,
                            {
                                data: $scope.sfsReportData,
                                colHeaders: true,
                                height: $scope.height,
                                trimDropdown: false,
                                renderAllRows: false,
                                colHeaders: [
                                   'UPC','Product Name','Series Name','Material Number','MPM',
                                   'Exclusivity','Box Off Category','Admissions','Language','Territory',
                                   'Product Type','Sales Channel','Platform','Resolution','Product Tier',
                                   'Pricing Tier','Release Date','Avail Year','Start Date','End Date','Status',
                                   'Delivery Date','Invoice Date','HoldBack Date','Pricing Exception','MG Method',
                                   'Pricing Method','Currency','Rev Split','MWP/MLFPB','Buy Rate','MG Amount',
                                   'Contract Title Id','Action','Contract Id'
                                ], 
                                columns: [
                                   { data: 'UPC',type: 'text',readOnly: true},
                                   { data: 'ProductName',type: 'text',readOnly: true},
                                   { data: 'seriesName',type: 'text',readOnly: true},
                                   { data: 'materialNumber',type: 'text',readOnly: true},
                                   { data: 'MPM',type: 'text',readOnly: true},
                                   { data: 'exclusivity',type: 'text',readOnly: true},
                                   { data: 'boxOffCategory',type: 'text',readOnly: true},
                                   { data: 'admissions',type: 'text',readOnly: true},
                                   { data: 'language',type: 'text',readOnly: true},
                                   { data: 'territory',type: 'text',readOnly: true},
                                   { data: 'productType',type: 'text',readOnly: true},
                                   { data: 'salesChannel',type: 'text',readOnly: true},
                                   { data: 'platform',type: 'text',readOnly: true},
                                   { data: 'resolution',type: 'text',readOnly: true},
                                   { data: 'productTier',type: 'text',readOnly: true},
                                   { data: 'pricingTier',type: 'text',readOnly: true},
                                   { data: 'releaseDate',type: 'date',dateFormat: $scope.UserDateFormatInUpperCase,correctFormat: true,readOnly: true},
                                   { data: 'availYear',type: 'text',readOnly: true},
                                   { data: 'startDate',type: 'date',dateFormat: $scope.UserDateFormatInUpperCase,correctFormat: true,readOnly: true},
                                   { data: 'endDate',type: 'date',dateFormat: $scope.UserDateFormatInUpperCase,correctFormat: true,readOnly: true},
                                   { data: 'status',type: 'text',readOnly: true},
                                   { data: 'deliveryDate',type: 'date',dateFormat: $scope.UserDateFormatInUpperCase,correctFormat: true,readOnly: true},
                                   { data: 'invoiceDate',type: 'date',dateFormat: $scope.UserDateFormatInUpperCase,correctFormat: true,readOnly: true},
                                   { data: 'holdBackDate',type: 'date',dateFormat: $scope.UserDateFormatInUpperCase,correctFormat: true,readOnly: true},
                                   { data: 'pricingException',type: 'text',readOnly: true},
                                   { data: 'mGMethod',type: 'text',readOnly: true},
                                   { data: 'pricingMethod',type: 'text',readOnly: true},
                                   { data: 'curr',type: 'text',readOnly: true},
                                   { data: 'revSplit',type: 'text',readOnly: true},
                                   { data: 'MWP_MLFPB',type: 'text',readOnly: true},
                                   { data: 'buyRate',type: 'text',readOnly: true},
                                   { data: 'mGAmount',type: 'text',readOnly: true},
                                   { data: 'contractTitleId',type: 'text',readOnly: true},
                                   { data: 'action',type: 'text',readOnly: true},
                                   { data: 'contractId',type: 'text',readOnly: true},
                                   
                                ], 
                                cells: function(row, col, prop) {
                                   var cellProperties = {};
                                   cellProperties.renderer = $scope.myRenderer;
                                   return cellProperties;
                                },
                                minSpareRows: 0, 
                                dropdownMenu: ['clear_column','alignment','filter_by_condition','filter_operators','filter_by_condition2','filter_by_value','filter_action_bar'],
                                filters: true,
                                licenseKey: appConfig.handsontableProLicenseKey,
                                stretchH: 'all',
                                manualColumnResize: true,
                                columnSorting: true,
                                afterLoadData: function(){
                                    if(hot){
                                        hot.updateSettings({minSpareRows: 1});
                                    }
                                }
                            });
        
                        (function (Handsontable) {
                            
                            'use strict';
                            
                            var MaxLengthEditor = Handsontable.editors.TextEditor.prototype.extend();
                            
                            MaxLengthEditor.prototype.prepare = function () {
                                Handsontable.editors.TextEditor.prototype.prepare.apply(this, arguments);
                                this.TEXTAREA.maxLength = this.cellProperties.maxLength;
                            };
                            
                            Handsontable.editors.registerEditor('maxlength', MaxLengthEditor);
                            
                        })(Handsontable);
        
                        $scope.myRenderer = function(instance, td, row, col, prop, value, cellProperties) {
                            
                            if(cellProperties.type == 'text'){
                                Handsontable.renderers.TextRenderer.apply(this, arguments);
                            }else if(cellProperties.type == 'numeric'){
                                Handsontable.renderers.NumericRenderer.apply(this, arguments);
                            }else if(cellProperties.type == 'date'){
                                Handsontable.renderers.DateRenderer.apply(this, arguments);
                            }else if(cellProperties.type == 'dropdown'){
                                Handsontable.renderers.DropdownRenderer.apply(this, arguments);
                            }
                        };
        
                        //Download the header template
                        $scope.exportCSVFile = function(){
                            hot.getPlugin('exportFile').downloadFile('csv', {
                                filename: 'SFS Report',
                                columnHeaders: true       // default false, exports the column headers
                            });
                        };
                        
                        //reset all the filters and reload the page
                        $scope.resetFilters = function(){
                            $scope.showSpinner = true;
                            document.location.reload();
                        };
                        
                        function setHeight() {
                            $scope.height = (initalHeight - $("#msgDiv").height());
                            $("#tableDiv .ht_master .wtHolder").css("height",$scope.height);
                            $("#tableDiv").css("height",$scope.height);
                        };
                        
                        $scope.removeMsgBlock= function(){
                            $scope.msgText = '';
                            $scope.height = initalHeight; 
                            $("#tableDiv .ht_master .wtHolder").css("height",$scope.height);
                            $("#tableDiv").css("height",$scope.height);
                        };
                        
                        $scope.init = function() {
                            $scope.sfsReportData = [];
                            hot.loadData($scope.sfsReportData); 
                        } 
                        
                        $scope.getSFSReportData = function(){
                            if(invalidValueSet.has($scope.filter.accountId) && invalidValueSet.has($scope.filter.countryId) && invalidValueSet.has($scope.filter.title) && 
                                invalidValueSet.has($scope.availDateFromVal) && invalidValueSet.has($scope.availDateToVal)
                            ){
                                $scope.msgText = '{!$label.CRM_MultiTactic_SearchError}';
                                $scope.msgSeverity = 'error';
                                $scope.showSpinner = false;
                                $scope.sfsReportData = [];
                                hot.loadData($scope.sfsReportData);
                                $timeout(setHeight,2);
                            }else{
                                var saveStartTime = new Date();
                                var timeDiff = 0;
                            
                                $scope.msgText=null;
                                $scope.showSpinner = true;
                                $scope.spinnerText = '{!$label.CRM_MultiOrder_spinnerText_Loading}';
                                $scope.removeMsgBlock;
                                
                                if(!invalidValueSet.has($scope.availDateFromVal)){
                                    $scope.filter.fromDate = new Date($scope.availDateFromVal.setMinutes($scope.availDateFromVal.getMinutes() - $scope.availDateFromVal.getTimezoneOffset())).toUTCString();
                                }
                                if(!invalidValueSet.has($scope.availDateToVal)){
                                    $scope.filter.toDate = new Date($scope.availDateToVal.setMinutes($scope.availDateToVal.getMinutes() - $scope.availDateToVal.getTimezoneOffset())).toUTCString();
                                }
                                
                                var capIds = [];
                                $scope.recordLimit = $scope.appConfig.recordLimit;
                                
                                var chunkTime = new Date();
                                console.log('Time Elapsed for chunk is Validation Last : ', (chunkTime - saveStartTime)+'---'+(((chunkTime - saveStartTime)-timeDiff)/1000));
                              
                                (function runSaveToSalesforce(rowsToProcess, returnedResults, failedRecCount) {
                                    rowsToProcess = rowsToProcess - $scope.appConfig.chunkSize;
                                    WB_SFS_Report_Controllerr.getSFSReportData(capIds,$scope.filter,function(result, event) {  
                                         if(!event.status){
                                            $scope.$apply(function() {
                                                $scope.msgText = event.message;
                                                $scope.msgSeverity = 'error';
                                                $scope.showSpinner = false;
                                                $timeout(setHeight,2);
                                            });
                                         }
                                         else if(rowsToProcess > 0 && result.length == $scope.appConfig.chunkSize){
                                            $.each(result, function( rowKey, sfsObj) {  
                                                if(!invalidValueSet.has(sfsObj.releaseDate)){
                                                    sfsObj.releaseDate = convertDate(sfsObj.releaseDate);
                                                }
                                                if(!invalidValueSet.has(sfsObj.startDate)){
                                                    sfsObj.startDate = convertDate(sfsObj.startDate);
                                                } 
                                                if(!invalidValueSet.has(sfsObj.endDate)){
                                                    sfsObj.endDate = convertDate(sfsObj.endDate);
                                                } 
                                                capIds.push(sfsObj.capId);
                                            });
                                            
                                            // If successful add results to the main array
                                			returnedResults = returnedResults.concat(result);
                                            
                                            // Update progress text for user
                                			$scope.$apply(function() {
                                				$scope.spinnerText = 'Loading Rows : '+returnedResults.length;
                                			});
                                			
                                			var chunkTime = new Date();
                                            console.log('Time Elapsed for chunk is Controller Last : ', (chunkTime - saveStartTime)+'---'+(((chunkTime - saveStartTime)-timeDiff)/1000));
                                	
                                			// Call salesforce again with remaining rows
                                			runSaveToSalesforce(rowsToProcess, returnedResults, failedRecCount);
                                		}else{
                                            $.each(result, function( rowKey, sfsObj) {  
                                                if(!invalidValueSet.has(sfsObj.releaseDate)){
                                                    sfsObj.releaseDate = convertDate(sfsObj.releaseDate);
                                                }
                                                if(!invalidValueSet.has(sfsObj.startDate)){
                                                    sfsObj.startDate = convertDate(sfsObj.startDate);
                                                } 
                                                if(!invalidValueSet.has(sfsObj.endDate)){
                                                    sfsObj.endDate = convertDate(sfsObj.endDate);
                                                } 
                                            });
                                            
                                            if(!invalidValueSet.has(result[0]) && !invalidValueSet.has(result[0].maxLimitExceededMsg) && result[0].maxLimitExceededMsg){
                                                $scope.msgText = result[0].maxLimitExceededMsg;
                                                $scope.msgSeverity = 'Info';
                                                $timeout(setHeight,2);
                                            }
                                            
                                            if(result.length == 0){
                                                $scope.msgText = '{!$Label.WB_No_Records_Found_Massage}';
                                                $scope.msgSeverity = 'Info';
                                                $timeout(setHeight,2);
                                            }
                                            
                                            $scope.sfsReportData = returnedResults.concat(result);
                                            hot.getPlugin('filters').clearConditions();
                                            hot.loadData($scope.sfsReportData);
                                            hot.getPlugin('filters').filter();
                                            $scope.showSpinner = false;
                                            $scope.spinnerText = '';
                                            
                                            var i = ($scope.sfsReportData.length -1);
                                            $.each($scope.sfsReportData, function( rowKey, sfsObj) {  
                                                if(i!=rowKey && invalidValueSet.has(sfsObj.capId)){
                                                    hot.alter('remove_row',rowKey,1);
                                                }
                                            });
                                            
                                            // Update UI
                                            $scope.$apply();
                                            
                                            var chunkTime = new Date();
                                            console.log('Time Elapsed for chunk is Controller Last : ', (chunkTime - saveStartTime)+'---'+(((chunkTime - saveStartTime)-timeDiff)/1000));
                                        }
                                    },{
                                        escape: false, timeout: 120000
                                    });
                                })($scope.recordLimit, [], 0);
                            }
                        };
                    }
               ]);//end of angular class
            </script>
        </head>
        <body>
            <div xmlns:ng="http://angularjs.org" id="ng-app" ng-app="UploadCAPRecords" ng-controller="UploadCAPController" class="slds" ng-cloak="ngCloak" ng-init="init();">
                <!-- ===========================Spinner================================= -->   
                <div class="spinnerModel" ng-show="showSpinner">
                    <div class="spinnerContent slds-spinner--large">
                        <img src="{!URLFOR($Resource.SLDS0120, '/assets/images/spinners/slds_spinner_brand.gif')}" alt="{{spinnerText}}" />
                        <div id="spinnerText">{{spinnerText}}</div>
                    </div>
                </div> 
                <!-- ===========================Spinner================================= --> 
                <!--- Filter Grid --->
                <!-- =========================== HEADER BANNER ================================-->     
                <div id="headerDiv" class="slds-page-header" role="banner">
                    <div class="slds-grid slds-wrap" style="margin-left:2%;"> 
                        <div class ="slds-col slds-size--2-of-10">
                            <div class="slds-grid slds-grid--vertical">
                                <!--Back To Home Link  -->
                                <div class ="slds-col">
                                    <div class="slds-form-element">
                                        <nav class="slds-m-bottom--m-small" role="navigation">
                                            <p id="bread-crumb-label" class="slds-assistive-text">You are here:</p>
                                            <ol class="slds-breadcrumb slds-list--horizontal" aria-labelledby="bread-crumb-label">
                                                <li class="slds-list__item slds-text-heading--label"><a href="{!URLFOR($Action.Client_Avail__c.Tab, $ObjectType.Client_Avail__c)}'">{!$Label.WB_Back_To_Home_Button}</a></li>
                                            </ol>
                                        </nav>
                                    </div>
                                </div>
                                <div class ="slds-col slds-p-top--large">
                                    <!-- Title Search  -->
                                    <div class ="slds-form-element">
                                        <div class="slds-form-element__control">
                                            <div class="slds-form-element__control">
                                              <input class="slds-input slds-picklist__label buttonGroupheight" style="min-height:31px !important;" ng-model="filter.title" type="text" placeholder="Title" ng-keyup="$event.keyCode == 13 ? getSFSReportData() : null"/>                            
                                          </div>
                                        </div>
                                    </div>  
                                </div>
                            </div>
                        </div>
                        <div class ="slds-col slds-size--2-of-10">
                            <div class="slds-grid slds-grid--vertical">
                                <div class ="slds-col">
                                    <div class ="slds-form-element">
                                        <div class="slds-form-element__control">
                                            <crm-lookup 
                                                    record-id="filter.accountId" 
                                                    record-name="accountName" 
                                                    object-name="Account" 
                                                    slds-resource-loc="{{appConfig.resourceSlds}}"
                                                    lookup-change=""
                                                    place-holder="Account"
                                                    account-record-type-name="Digital_Client"/>
                                        </div>
                                    </div>
                                </div>
                                <div class ="slds-col slds-p-top--x-small">
                                    <!-- Start Date  -->
                                    <div class ="slds-form-element">
                                        <div class="slds-form-element__control slds-lookup">
                                            <div class="slds-input-has-icon slds-input-has-icon--right">
                                                <svg aria-hidden="true" class="slds-input__icon slds-icon-text-default">
                                                    <use xlink:href="{!URLFOR($Resource.SLDS0120, 'assets/icons/utility-sprite/svg/symbols.svg#event')}"></use>
                                                </svg>
                                                <input type="text" id="FromDate" placeholder="Start Date"  dp-model="availDateFromVal" crm-datepicker="true" dp-options="datepickerOptions" class="slds-input slds-input--small"  ng-Locale="shortDate" />                                                                                         
                                            </div>
                                            <span ng-show="isinvalidTo" style="color:red"><div>{!$Label.CRM_Error_Enter_Valid_Value}</div></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class ="slds-col slds-size--2-of-10">
                            <div class="slds-grid slds-grid--vertical">
                                <div class ="slds-col ">
                                    <!-- Country filter  -->
                                    <div class ="slds-form-element">
                                        <div class="slds-form-element__control">
                                            <crm-lookup 
                                                    record-id="filter.countryId" 
                                                    record-name="countryName" 
                                                    object-name="Country__c" 
                                                    slds-resource-loc="{{appConfig.resourceSlds}}"
                                                    lookup-change=""
                                                    place-holder="Country"/>
                                        </div>
                                    </div>
                                </div>
                                <div class ="slds-col slds-p-top--x-small">
                                    <!-- End Date  -->
                                    <div class ="slds-form-element">
                                        <div class="slds-form-element__control slds-lookup">
                                            <div class="slds-input-has-icon slds-input-has-icon--right">
                                                <svg aria-hidden="true" class="slds-input__icon slds-icon-text-default">
                                                    <use xlink:href="{!URLFOR($Resource.SLDS0120, 'assets/icons/utility-sprite/svg/symbols.svg#event')}"></use>
                                                </svg>
                                                <input type="text" id="ToDate" placeholder="End Date"  dp-model="availDateToVal" crm-datepicker="true" dp-options="datepickerOptions" class="slds-input slds-input--small"  ng-Locale="shortDate" />                                                                                         
                                            </div>
                                            <span ng-show="isinvalidTo" style="color:red"><div>{!$Label.CRM_Error_Enter_Valid_Value}</div></span>
                                        </div>
                                    </div> 
                                </div>
                            </div>
                        </div>
                        <div class ="slds-col slds-size--2-of-10">
                            <div class="slds-grid slds-grid--align-end">
                                <div class ="slds-col" style="padding-top: 39px;">
                                    <!-- Quick Save and Search button -->
                                    <div class="slds-form-element" style="float: right;">
                                        <div class="slds-form-element__control">
                                            <div class="slds-button-group slds-button-space-left" role="group">
                                                <button class="buttonGroupheight slds-button slds-button--neutral .slds-has-flexi-truncate" style="line-height: inherit;" ng-click="exportCSVFile()">{!$Label.WB_Export_Button}</button>  
                                                <button ng-click="getSFSReportData()" class="buttonGroupheight slds-button slds-button--neutral" style="line-height: inherit;">{!$Label.WB_Search_Records_Button}</button>
                                                <button id="resetButton" ng-click="resetFilters()" class="buttonGroupheight slds-button slds-button--neutral .slds-has-flexi-truncate" style="line-height: inherit;">Reset</button>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="slds-button-group" role="group"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- end of fitler grid -->
                <!-- ===========================Exception=============================== -->
                <div Id="msgDiv" ng-show="msgText"  class="slds-grid">
                    <div class="slds-col slds-notify  slds-theme--{{msgSeverity}} slds-notify--toast slds-box--x-small slds-theme--alert-texture" role="alert">
                        <button class="slds-button slds-button--icon-inverse slds-notify__close slds-m-right--small" ng-click="removeMsgBlock()">
                            <svg aria-hidden="true" class="slds-button__icon slds-button__icon--medium">
                                <use xlink:href="{!URLFOR($Resource.SLDS0120, '/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                            </svg>
                            <span class="slds-assistive-text">Close</span>
                        </button>
                        <div class="notify__content slds-grid" ng-show="msgText">
                            <svg aria-hidden="true" class="slds-col slds-icon slds-icon--small slds-m-right--small slds-no-flex" ng-show="msgSeverity == 'sucess'">
                                <use xlink:href="{!URLFOR($Resource.SLDS0120, '/assets/icons/utility-sprite/svg/symbols.svg#sucess')}"></use>
                            </svg>
                            <svg aria-hidden="true" class="slds-col slds-icon slds-icon--small slds-m-right--small slds-no-flex" ng-show="msgSeverity == 'error'">
                                <use xlink:href="{!URLFOR($Resource.SLDS0120, '/assets/icons/utility-sprite/svg/symbols.svg#error')}"></use>
                            </svg>
                            <svg aria-hidden="true" class="slds-col slds-icon slds-icon--small slds-m-right--small slds-no-flex" ng-show="msgSeverity == 'Info'">
                                <use xlink:href="{!URLFOR($Resource.SLDS0120, '/assets/icons/utility-sprite/svg/symbols.svg#info')}"></use>
                            </svg>
                            <div class="slds-col slds-align-middle">
                                <p class="slds-col slds-text-heading--small" style="font-size: 15px !important;">{{msgText}}</p>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- ===========================Exception=============================== -->
                
                <!-- ===========================Dynamic Div================================= -->
                <div id="tableDiv" class="hot handsontable htColumnHeaders" style="margin: 3px 3px 0;"></div>
                <c:CRM_SLDSPicklist />
                <c:CRM_SLDSLookup />
            </div>                
        </body>
    </html>  
</apex:page>