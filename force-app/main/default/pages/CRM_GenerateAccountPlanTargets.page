<apex:page standardController="Country_Plan__c" recordSetVar="countryPlan" extensions="CRM_GenerateAccountPlanTargetsCtrl" applyHtmlTag="true" applyBodyTag="true" showHeader="false" sidebar="false" title="{!$ObjectType.Country_Plan__c.label}">
    <html
        xmlns="http://www.w3.org/2000/svg"
        xmlns:xlink="http://www.w3.org/1999/xlink">
        <head>
            <apex:stylesheet value="{!URLFOR($Resource.SLDS0120, 'assets/styles/salesforce-lightning-design-system-vf.css')}" />
            <apex:includeScript value="{!URLFOR($Resource.CRM_Resource_Library, 'js/jquery.min.js')}" />
            <apex:includeScript value="{!URLFOR($Resource.CRM_Resource_Library, 'js/angular.min.js')}" />

            <script type="text/javascript">
            angular.module('AutoAllocateApp', [])
                .controller('AutoAllocateCtrl',function($scope,$interval) {
                    $scope.invokedFromList = ('{!ISNULL(countryPlan)}' == 'true' ? true : false);
                    $scope.failedCPRecods;
                    $scope.showSpinner = false;
                    $scope.spinnerText;
                    $scope.msgText;
                    $scope.msgSeverity;
                    $scope.Timer = null;
                    $scope.showErrorTable = false;
                    $scope.backToCountryPlan = function(){
                        var isLightningExperienceOrSf1 = ((typeof sforce != 'undefined') && sforce && (!!sforce.one));
                        if($scope.invokedFromList) {
                            if(isLightningExperienceOrSf1){
                                window.open('/lightning/o/Country_Plan__c/list?filterName=Recent','_parent');
                            }else{
                                window.location.href="{!URLFOR($Action.Country_Plan__c.Tab, $ObjectType.Country_Plan__c)}";
                            }
                        }
                        else {
                            if(isLightningExperienceOrSf1){
                                window.open('/lightning/r/'+'Country_Plan__c'+'/'+'{!countryPlan.Id}'+'/view','_parent');
                            }else{
                                window.location.href="/{!countryPlan.Id}";
                            }
                        }
                    };

                    $scope.autoAllocate = function() {
                        $scope.showSpinner = true;
                        var countryPlanIds = [];

                        if ('{!ISNULL(countryPlan)}' != 'true') {
                            countryPlanIds.push('{!countryPlan.Id}');
                        } else {
                            <apex:repeat var="cplan" value="{!countryPlans}" >
                                countryPlanIds.push('{!cplan.Id}');
                            </apex:repeat>
                            
                            if(countryPlanIds.length == 0) {
                                $scope.msgText = '{!$Label.CRM_No_Country_Plan_selected_to_generate_Target}';
                                $scope.msgSeverity = 'error';
                                $scope.showSpinner = false;
                                
                                return false;
                            }
                        }

                        var totalCountryPlans = countryPlanIds.length;

                        (function generateCountryPlanTargets(rowsToProcess, failedRecords) {
                            console.log('rowsToProcess', rowsToProcess.length, 'failedRecords', failedRecords.length);

                            if (typeof rowsToProcess == 'undefined' || rowsToProcess.length == 0) {
                                $scope.showSpinner = false;
                                return;
                            }

                            var chunkSize = 5, // Recursive batch size
                                chunkedData = rowsToProcess.splice(0, chunkSize);

                            CRM_GenerateAccountPlanTargetsCtrl.createTarget(chunkedData, function(result, event) {

                                if (!event.status) {
                                    $scope.msgText = event.message;
                                    $scope.msgSeverity = 'error';
                                    $scope.showSpinner = false;
                                } else if (rowsToProcess.length > 0) {
                                    failedRecords = failedRecords.concat(result);

                                    // Update progress text for user
                                    $scope.spinnerText = (totalCountryPlans - rowsToProcess.length) + ' / ' + totalCountryPlans;

                                    generateCountryPlanTargets(rowsToProcess, failedRecords);
                                } else {
                                    failedRecords = failedRecords.concat(result);

                                    $scope.failedCPRecods = failedRecords;

                                    // Update UI
                                    $scope.spinnerText = '';
                                    $scope.showSpinner = false;

                                    if(failedRecords.length > 0){
                                        if(failedRecords[0].error){
                                            $scope.msgText = '{!$Label.CRM_Account_Plan_Target_Upsert_Failed_Msg}';
                                            $scope.msgSeverity = 'error';
                                            $scope.showErrorTable = true;
                                            $scope.showSpinner = false;
                                        }else{
                                            $scope.showSpinner = true;
                                            $scope.processingAccountPlanTargets(failedRecords[0].jobIds);
                                        }
                                    }
                                    else {
                                         $scope.msgText = '{!$Label.CRM_Target_Success_Message}';
                                        $scope.msgSeverity = 'success';
                                    }
                                }

                                $scope.$apply();

                            }, {
                                escape: false,
                                timeout: 120000,
                                buffer: false
                            });
                        })(countryPlanIds, []);
                    };
                    
                    $scope.processingAccountPlanTargets = function(jobIds){
                        $scope.Timer = $interval(function () {$scope.getCountOfNonCompletedQueueableJob(jobIds)}, 2000);
                    };
                    
                    $scope.getCountOfNonCompletedQueueableJob = function(jobIds){
                        CRM_GenerateAccountPlanTargetsCtrl.watchAPTargetsQueueableJobs(jobIds,function(result, event) {
                            if (!event.status) {
                                $interval.cancel($scope.Timer);
                                $scope.msgText = '{!$Label.CRM_Account_Plan_Target_Upsert_Failed_Msg}';
                                $scope.msgSeverity = 'error';
                                $scope.showSpinner = false;
                            }else{
                                console.log('result',result);
                                if(result == 0){
                                    console.log('If IN ');
                                    $interval.cancel($scope.Timer);
                                    $scope.getErrors(jobIds);
                                }else{
                                    console.log('If else  ');
                                    $scope.showSpinner = true;
                                }
                            }
                        });
                    };
                    
                    $scope.getErrors = function(jobIds){
                        CRM_GenerateAccountPlanTargetsCtrl.getLoggedErrorReocrds(jobIds,function(result, event) {
                            if (event.status) {
                                console.log('result : ',result);
                                $scope.failedCPRecods = result;
                                $scope.showSpinner = false;
                                if($scope.failedCPRecods.length > 0){
                                    $scope.msgText = '{!$Label.CRM_Account_Plan_Target_Upsert_Failed_Msg}';
                                    $scope.msgSeverity = 'error';
                                    $scope.showErrorTable = true;
                                }else{
                                    $scope.msgText = '{!$Label.CRM_Target_Success_Message}';
                                    $scope.msgSeverity = 'success';
                                }
                                $scope.$apply();
                            }
                        });
                    };
                });

            </script>
        </head>
        <body>
            <div class="slds" xmlns:ng="http://angularjs.org" id="ng-app" ng-init="autoAllocate();" ng-app="AutoAllocateApp" ng-controller="AutoAllocateCtrl" ng-cloak="ngCloak">

                <div class="slds-page-header" role="banner">
                  <div class="slds-grid">
                    <div class="slds-col slds-has-flexi-truncate">
                        <nav class="slds-m-bottom--xx-small" role="navigation">
                            <p id="bread-crumb-label" class="slds-assistive-text">You are here:</p>
                            <ol class="slds-breadcrumb slds-list--horizontal" aria-labelledby="bread-crumb-label">
                                <li class="slds-list__item slds-text-heading--label">
                                    <a href="{!URLFOR($Action.Country_Plan__c.Tab, $ObjectType.Country_Plan__c)}">{!$ObjectType.Country_Plan__c.labelPlural}</a>
                                </li>
                                <li class="slds-list__item slds-text-heading--label" ng-hide="{!ISNULL(countryPlan)}">
                                    <a href="/{!countryPlan.Id}">{!countryPlan.Name}</a>
                                </li>
                            </ol>
                        </nav>
                        <div class="slds-col slds-has-flexi-truncate">
                            <h1 class="slds-text-heading--medium slds-truncate" title="Auto Allocate">Auto Allocate</h1>
                        </div>
                    </div>

                    <div class="slds-col slds-no-flex slds-align-bottom">
                        <div class="slds-button-group" role="group">
                            <button class="slds-button slds-button--neutral" ng-click="backToCountryPlan()" >Back</button>
                        </div>
                    </div>
                  </div>
                </div>

                <div class="slds-size--1-of-1 slds-spinner--small" ng-show="showSpinner">
                    <div class="slds-text-heading--small">
                        <img style="height:36px" src="{!URLFOR($Resource.SLDS0120, '/assets/images/spinners/slds_spinner_brand.gif')}" /> Processing {{spinnerText}} ...
                    </div>
                </div>

                <div ng-hide="showSpinner" class="slds-size--1-of-1 slds-notify slds-theme--{{msgSeverity}} slds-notify--toast slds-box--x-small" role="alert" rendered="display">
                    <div class="notify__content slds-grid">
                        <svg aria-hidden="true" class="slds-icon slds-icon--small slds-m-right--small slds-col slds-no-flex">
                            <use xlink:href="{!URLFOR($Resource.SLDS0120)}/assets/icons/utility-sprite/svg/symbols.svg#warning"></use>
                        </svg>
                        <div class="slds-col slds-align-middle">
                          <h2 class="slds-text-heading--small">{{msgText}}</h2>
                        </div>
                    </div>
                </div>

                <div class="slds-grid">
                    <div ng-show="showErrorTable" class="slds-size--1-of-1">
                        <table class="slds-table slds-table--bordered">
                            <tr class="slds-text-heading--label">
                                <th class="slds-cell-shrink">Account Plan</th>
                                <th class="slds-cell-shrink">Error</th>
                            </tr>
                            <tr class="slds-hint-parent" ng-repeat="cp in failedCPRecods">
                                <td class="slds-truncate" data-label="Account Name">
                                    <a href="/{{cp.id}}">{{cp.name}}</a>
                                </td>
                                <td class="slds-truncate" data-label="Account Name">{{cp.error}}</td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
        </body>
    </html>
</apex:page>